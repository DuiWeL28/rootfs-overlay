## Configuration file for ferm(1)
##

# ipv4
domain ip {
	table filter {
		chain INPUT {
			policy DROP;

			# established incoming connections are accepted
			mod state state (ESTABLISHED) ACCEPT;

			# traffic on the loopback interface is accepted
			interface lo ACCEPT;
		}

		chain OUTPUT {
			policy DROP;

			# established outgoing connections are accepted
			mod state state (ESTABLISHED) ACCEPT;

			# whitelist access to local resources
			outerface lo {
				mod state state (RELATED) proto icmp ACCEPT;

				# whitelist access to tor's socksports
				daddr 127.0.0.1 proto tcp syn dport 9050 {
					mod owner uid-owner root ACCEPT;
					mod owner uid-owner proxy ACCEPT;
					mod owner uid-owner nobody ACCEPT;
				}
				daddr 127.0.0.1 proto tcp syn mod multiport destination-ports (9050 9061 9062 9150) {
					mod owner uid-owner luther ACCEPT;
				}
				#daddr 127.0.0.1 proto tcp syn dport 9062 {
				#	mod owner ntpd ACCEPT;
				#}

				# whitelist access to tor's controlport
				daddr 127.0.0.1 proto tcp dport 9052 {
					mod owner uid-owner root ACCEPT;
				}

				# whitelist access to the tor control port filter
				daddr 127.0.0.1 proto tcp dport 9051 {
					mod owner uid-owner luther ACCEPT;
				}

				# whitelist access to tor's transport
				daddr 127.0.0.1 proto tcp dport 9040 {
					mod owner uid-owner luther ACCEPT;
				}

				# whitelist access to system dns and tor's dnsport
				daddr 127.0.0.1 proto udp dport (53 5353) {
					mod owner uid-owner luther ACCEPT;
				}

				# whitelist access to ttdnsd
				daddr 127.0.0.2 proto udp dport 53 {
					mod owner uid-owner luther ACCEPT;
				}
				daddr 127.0.0.2 proto tcp syn dport 53 {
					mod owner uid-owner luther ACCEPT;
				}

				# whitelist access to cups
				daddr 127.0.0.1 proto tcp syn dport 631 {
					mod owner uid-owner luther ACCEPT;
				}

				# whitelist access to monkeysphere
				daddr 127.0.0.1 proto tcp syn dport 6136 {
					mod owner uid-owner luther ACCEPT;
				}

				# whitelist access to onionshare
				daddr 127.0.0.1 proto tcp syn dport 17600:17650 {
					mod owner uid-owner luther ACCEPT;
				}
			}

			# clearnet is allowed to connect to any tcp port via the
			# external interfaces (but lo is blocked so it cannot interfere
			# with tor etc) including dns on the lan. udp dns queries are
			# also allowed
			outerface ! lo mod owner uid-owner clearnet {
				proto tcp ACCEPT;
				proto udp dport domain ACCEPT;
			}

			# local network connections should not go through tor but dns
			# shall be rejected
			daddr (10.0.0.0/8 172.16.0.0/12 192.168.0.0/16) @subchain "lan" {
				proto tcp dport domain REJECT;
				proto udp dport domain REJECT;
				ACCEPT;
			}

			# tor is allowed to do anything it wants to
			mod owner uid-owner debian-tor {
				proto tcp syn mod state state (NEW) ACCEPT;
			}

			# everything else is dropped and logged
			LOG log-prefix "dropped outbound packet: " log-level debug log-uid;
			REJECT reject-with icmp-port-unreachable;
		}

		chain FORWARD {
			policy DROP;
		}
	}

	table nat {
		chain PREROUTING {
			policy ACCEPT;
		}

		chain POSTROUTING {
			policy ACCEPT;
		}

		chain OUTPUT {
			policy ACCEPT;

			# .onion mapped addresses redirection to tor
			daddr 127.192.0.0/10 proto tcp REDIRECT to-ports 9040;

			# redirect system dns to tor's dnsport
			daddr 127.0.0.1 proto udp dport 53 REDIRECT to-ports 5353;
		}
	}
}

# ipv6
domain ip6 {
	table filter {
		chain INPUT {
			policy DROP;
		}

		chain FORWARD {
			policy DROP;
		}

		chain OUTPUT {
			policy DROP;

			LOG log-prefix "dropped outbound packet: " log-level debug log-uid;
			REJECT reject-with icmp6-port-unreachable;
		}
	}
}
