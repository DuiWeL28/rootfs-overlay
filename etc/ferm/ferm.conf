## Configuration file for ferm(1)
##

## IPv4
domain ip {
	table filter {
		chain INPUT {
			policy DROP;

			## Established incoming conns are accepted.
			mod state state (ESTABLISHED) ACCEPT;

			## Traffic on loopback is accepted.
			interface lo ACCEPT;
		}

		chain OUTPUT {
			policy DROP;

			## estab outgoing accepted
			mod state state (ESTABLISHED) ACCEPT;

			## whitelist access to local resources
			outerface lo {
				## related out icmp packets accepted
				mod state state (RELATED) proto icmp ACCEPT;

				## whitelist access to tor's socksports
				daddr 127.0.0.1 proto tcp syn dport 9050 {
					mod owner uid-owner root ACCEPT;
					mod owner uid-owner proxy ACCEPT;
					mod owner uid-owner nobody ACCEPT;
				}
				daddr 127.0.0.1 proto tcp syn mod multiport destination-ports (9050 9061 9062 9150) {
				mod owner uid-owner luther ACCEPT;
				}
				daddr 127.0.0.1 proto tcp syn dport 9062 {
					mod owner uid-owner htp ACCEPT;
					## TODO: check this block
				}

				## whitelist tor's controlport filter
				daddr 127.0.0.1 proto tcp dport 9052 {
					mod owner uid-owner luther ACCEPT;
				}

				## whitelist tor's transport
				daddr 127.0.0.1 proto tcp dport 9040 {
					mod owner uid-owner luther ACCEPT;
				}

				## whitelist system dns and tor dnsport
				daddr 127.0.0.1 proto udp dport (53 5353) {
					mod owner uid-owner luther ACCEPT;
				}
			}

			## clearnet is allowed any tcp port but lo is disabled so it
			## doesn't interfere with tor
			## udp dns is also allowed
			outerface ! lo mod owner uid-owner clearnet {
				proto tcp ACCEPT;
				proto udp dport domain ACCEPT;
			}

			## local networks don't tor but dns is disabled
			daddr (10.0.0.0/8 172.16.0.0/12 192.168.0.0/16) @subchain "lan" {
				proto tcp dport domain REJECT;
				proto udp dport domain REJECT;
				ACCEPT;
			}

			## tor does it all
			mod owner uid-owner debian-tor {
				proto tcp syn mod state state (NEW) ACCEPT;
			}

			## everything else is logged and dropped
			LOG log-prefix "Dropped outbound packet: " log-level debug log-uid;
			REJECT reject-with icmp-port-unreachable;
		}

		chain FORWARD {
			policy DROP;
		}
	}

	table nat {
		chain PREROUTING {
			policy ACCEPT;
		}

		chain POSTROUTING {
			policy ACCEPT;
		}

		chain OUTPUT {
			policy ACCEPT;

			## onions to tor
			daddr 127.192.0.0/10 proto tcp REDIRECT to-ports 9040;

			## dns to tor's dns
			daddr 127.0.0.1 proto udp dport 53 REDIRECT to-ports 5353;
		}
	}
}

## ipv6 (no tor support yet!)
domain ip6 {
	table filter {
		chain INPUT {
			policy DROP;
		}
	}

	chain FORWARD {
		policy DROP;
	}

	chain OUTPUT {
		policy DROP;

		LOG log-prefix "Dropped outbound packet: " log-level debug log-uid
		REJECT reject-with icmp6-port-unreachable;
	}
}
